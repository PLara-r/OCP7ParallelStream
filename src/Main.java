import java.util.*;

public class Main {

    public static void main(String[] args) {
        Arrays.asList(1,2,3,4,5,6)
                .stream()
                .forEach(s -> System.out.print(s+" "));
        Arrays.asList(1,2,3,4,5,6)
                .parallelStream()
                .forEach(s -> System.out.println(s+" "));
        Arrays.asList(1,2,3,4,5,6)
                .parallelStream()
                .forEachOrdered(s -> System.out.print(s+" "));



    }
}
//1 2 3 4 5 6 4
//6
//5
//2
//3
//1
//1 2 3 4 5 6
//Как и следовало ожидать, результаты упорядочены и предсказуемы, потому что мы используем последовательный поток. строка 7

//строка 10 В параллельном потоке forEach()операция применяется одновременно к нескольким элементам потока.
//Если вы сравните это с более ранними частями главы, Как видите, результаты больше не упорядочены и не предсказуем

// строки 13-14 StreamsAPI , включает в себя альтернативный вариант forEach()операции , называемой forEachOrdered(),
// что вынуждает параллельный поток для обработки результатов,
//  за счет производительности.